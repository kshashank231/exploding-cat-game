{"version":3,"sources":["Card.js","config/production.js","config/config.js","store/game.js","store/auth.js","CardsContainer.js","GameInfo.js","DialogBox.js","LeaderBoard.js","Game.js","Home.js","App.js","reportWebVitals.js","store/configureStore.js","index.js"],"names":["Card","props","card","cardData","CardContent","isSelected","className","src","description","onClick","handleCardSelected","prodConfig","baseUrl","config","gameSlice","createSlice","name","initialState","defuse","gameStatus","leaderBoard","reducers","setDefuse","state","action","console","log","payload","setStatus","updateLeaderBoard","actions","authSlice","userDetails","userName","userId","score","loggedIn","setUserDetails","updateScore","parseInt","logoff","updateScoreAsync","dispatch","getState","fetch","method","body","JSON","stringify","headers","then","response","json","user","title","CardContainer","useState","cards","setCards","canDefuse","useSelector","game","auth","useDispatch","cardSelected","idx","length","prevItems","newItems","parse","setTimeout","filter","item","ItemIdx","id","array","randomIndex","currentIndex","Math","floor","random","shuffle","useEffect","initialcards","Content","map","index","GameInfo","DialogDox","dialogInfo","data","desc","handleBtn1","btn1","handleBtn2","btn2","LeaderBoard","showLeaderBoardBtn","setShowLeaderBoardBtn","setInterval","Game","retry","goHome","gameOverDialog","gameWonDialog","Home","username","setUserName","type","value","onChange","event","target","placeholder","process","App","userLoggedIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b0f648c.chunk.js","sourcesContent":["import './main-styles.css';\nexport default function Card(props) {\n    let card = props.cardData\n    const CardContent = () => {\n        if(card.isSelected) {\n            return (\n                <div className=\"card-description\">\n                    <div className=\"card-description-item\">\n                        <img src={card.src}></img>\n                    </div>\n                    <div className=\"card-description-item\">\n                        <p>{card.description}</p>\n                    </div>\n                </div>       \n            )\n        } else {\n            return (\n                <div className=\"flip-button\" onClick={props.handleCardSelected}>\n                    <div></div>\n                </div>\n            )\n           \n        }\n    }\n\n\n  return (\n    <div className={`card ${card.isSelected ? \"selected-card\" : \"\"}`}>\n        <div className=\"card-content\">\n            <CardContent/>\n      </div>\n    </div>\n  );\n}\n\n","let prodConfig = {\n    baseUrl: \"https://explodingcatgame-api.herokuapp.com/\"\n}\n\nexport default prodConfig","import devConfig from './dev'\nimport prodConfig from './production'\n\nlet config = {\n    ...(process.env.NODE_ENV === 'production' ? prodConfig : devConfig)\n   \n}\nexport default config","import { createSlice } from \"@reduxjs/toolkit\";\nimport config from './../config/config'\n\nconst gameSlice = createSlice({\n    name:\"game\",\n    initialState: {\n        defuse:false,\n        gameStatus:\"inprogress\",\n        leaderBoard:[]\n    },\n    reducers: {\n        setDefuse: (state, action) => {\n            console.log(\"setDefuse\",state, action.payload)\n            state.defuse = action.payload\n        },\n        setStatus: (state, action) => {\n            console.log(\"setDefuse\",state, action.payload)\n            state.gameStatus = action.payload\n        },\n        updateLeaderBoard: (state, action)=> {\n            console.log(\"updateLeaderBoard\",state, action.payload)\n            state.leaderBoard = action.payload\n        }\n       \n    }\n})\n\nexport const {setStatus, setDefuse, updateLeaderBoard } = gameSlice.actions\n\nexport const getLeaderBoard = () => {\n    // the inside \"thunk function\"\n    return (dispatch, getState) => {\n        fetch(config.baseUrl + \"getLeaderBoard\")\n        .then(response => response.json())\n        .then(json => {\n            console.log(json)\n            dispatch(updateLeaderBoard(json.data))\n        })\n\n    }\n  }\n\n\nexport default gameSlice.reducer","import { createSlice } from \"@reduxjs/toolkit\";\nimport config from './../config/config'\n\nconst authSlice = createSlice({\n    name:\"auth\",\n    initialState: {\n        userDetails: {\n            userName: \"\",\n            userId:\"\",\n            score:0\n        },\n        loggedIn: false\n       \n    },\n    reducers: {\n        setUserDetails: (state, action) => {\n            console.log(\"setUserDetails\",state, action.payload)\n            state.userDetails = action.payload\n            state.loggedIn = true\n        },\n        updateScore: (state, action) => {\n            console.log(\"setUserDetails\",state, action.payload)\n            state.userDetails.score = parseInt(state.userDetails.score, 10) + 1\n        },\n        logoff: (state, action) => {\n            console.log(\"setUserDetails\",state, action.payload)\n            state.loggedIn = false\n        },\n    }\n})\n\nexport const { setUserDetails, updateScore,logoff } = authSlice.actions\n\nexport const setUserDetailsAsync = userId => {\n  // the inside \"thunk function\"\n  return (dispatch, getState) => {\n        fetch(config.baseUrl + \"signin\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                userName: userId\n            }),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n        .then(response => response.json())\n        .then(json => {\n            console.log(json)\n            let user =  {\n                userName: json.userName,\n                userId:json.userId,\n                score:json.score\n            }\n            dispatch(setUserDetails(user))\n        })\n  }\n}\nexport const updateScoreAsync = userDetails => {\n    // the inside \"thunk function\"\n    return (dispatch, getState) => {\n        fetch(config.baseUrl + \"update\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                userName:userDetails.userName,\n                score:parseInt(userDetails.score, 10)   +1\n            }),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n        .then(response => response.json())\n        .then(json => {\n            console.log(json)\n            let user =  {\n                userName: json.title,\n                userId:json.userId,\n                score:json.score\n            }\n            dispatch(updateScore(user))\n        })\n\n    }\n  }\n\nexport default authSlice.reducer","import Card from \"./Card\"\nimport './main-styles.css';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useState, useEffect } from \"react\";\nimport { setDefuse, setStatus  } from './store/game'\nimport { updateScoreAsync } from './store/auth'\n\nexport default function CardContainer() {\n    const [cards, setCards] = useState([]);\n    const canDefuse =useSelector(state => state.game.defuse)\n    const gameStatus = useSelector(state => state.game.gameStatus)\n    const userDetails = useSelector(state => state.auth.userDetails)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        let initialcards = [{id:1, description:\"Cat\", src:\"https://img.icons8.com/nolan/64/cat.png\"},{id:2,  description:\"Defuse\",src:\"https://img.icons8.com/external-justicon-flat-justicon/64/000000/external-jacket-autumn-clothes-justicon-flat-justicon-2.png\"},\n        {id:3, description:\"Shuffle\",src:\"https://img.icons8.com/cute-clipart/64/000000/shuffle.png\"},{id:4,  description:\"Exploding kitten\",src:\"https://img.icons8.com/emoji/96/000000/bomb-emoji.png\"}]\n\n\n        let currentIndex = initialcards.length,  randomIndex;\n\n        // While there remain elements to shuffle...\n        while (currentIndex !== 0) {\n      \n          // Pick a remaining element...\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex--;\n      \n          // And swap it with the current element.\n          [initialcards[currentIndex], initialcards[randomIndex]] = [\n            initialcards[randomIndex], initialcards[currentIndex]];\n        }\n        console.log(initialcards)\n\n        setCards(initialcards)\n      \n     }, []);\n\n     function shuffle(array) {\n        let currentIndex = array.length,  randomIndex;\n      \n        // While there remain elements to shuffle...\n        while (currentIndex !== 0) {\n      \n          // Pick a remaining element...\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex--;\n      \n          // And swap it with the current element.\n          [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex], array[currentIndex]];\n        }\n      \n        return array;\n      }\n\n    function cardSelected(){\n        console.log(\"cardSelected\")\n        const idx = cards.length-1\n        // const newItems = cards.filter((items,idx)=> idx !== cards.length-1)\n        setCards(prevItems=> {\n            let newItems = JSON.parse(JSON.stringify(prevItems));\n            newItems[idx][\"isSelected\"] = true\n            console.log(\"newItems\", newItems)\n            console.log(\"state, canDefuse\", canDefuse, \", gameStatus\", gameStatus)\n\n            return newItems\n        });\n        setTimeout( () => {\n            let newItems = JSON.parse(JSON.stringify(cards));\n            console.log(\"newItems\", newItems)\n            switch(newItems[idx][\"id\"]) {\n                case 1:\n                    newItems = newItems.filter((item,ItemIdx) => idx !== ItemIdx)\n                    if(newItems.length === 0) {\n                        dispatch(setStatus(\"won\"))\n                        dispatch(updateScoreAsync(userDetails))\n                    }\n                    break;\n                case 2:\n                    newItems = newItems.filter((item,ItemIdx) => idx !== ItemIdx)\n                    // if(newItems.length === 0) {\n                    //     dispatch(setStatus(\"won\"))\n                    // }\n                    dispatch(setDefuse(true))\n                    break;\n                case 3:\n                    if(newItems.length === 1) {\n                        dispatch(setStatus(\"won\"))\n                        dispatch(updateScoreAsync(userDetails))\n                    } else {\n                        newItems =  [{id:1, description:\"Cat\", src:\"https://img.icons8.com/nolan/64/cat.png\"},{id:2,  description:\"Defuse\",src:\"https://img.icons8.com/external-justicon-flat-justicon/64/000000/external-jacket-autumn-clothes-justicon-flat-justicon-2.png\"},\n                        {id:3, description:\"Shuffle\",src:\"https://img.icons8.com/cute-clipart/64/000000/shuffle.png\"},{id:4,  description:\"Exploding kitten\",src:\"https://img.icons8.com/emoji/96/000000/bomb-emoji.png\"}]\n                \n                        dispatch(setDefuse(false))\n                        newItems = shuffle(newItems)\n                        \n                    }\n                    break;\n                    \n                case 4:\n                    if(canDefuse) {\n                        newItems = newItems.filter((item,ItemIdx) => idx !== ItemIdx)\n                        dispatch(setDefuse(false))\n                    } else {\n                        dispatch(setStatus(\"gameover\"))\n                    }\n                    break;\n                default:\n                    // code block\n                }\n                setCards(newItems)\n                console.log(\"timeout state, canDefuse\", canDefuse, \", gameStatus\", gameStatus)\n          }, 2000);\n       \n\n\n\n        // console.log(\"id\", id)\n    }\n    const Content = ()=> {\n        switch(gameStatus) {\n            case \"inprogress\":\n                return (\n                    <div className=\"container\">{\n                        cards.map((card, index) => {\n                            return <Card key={index} cardData={card} handleCardSelected={cardSelected}/>\n                        })\n                    }</div>\n                ) \n            case \"won\":\n                return (\n                    <div>\n                        <h1>Won</h1>\n                    </div>\n                ) \n            case \"gameover\":\n                return (\n                    <div>\n                        <h1>Lost</h1>\n                    </div>\n                ) \n        }\n    }\n\n    return (\n        <Content />\n    );\n}\n","import { useSelector } from 'react-redux'\n\nexport default function GameInfo() {\n\n    const userDetails = useSelector(state => state.auth.userDetails)\n\n    const canDefuse =useSelector(state => state.game.defuse)\n\n    return (\n        <>\n            <div className=\"game-info\">\n                <div >Defuse: {canDefuse? \"1\":\"0\"}</div>\n            </div>\n            <div className=\"user-info\">\n                <div>SCORE: {userDetails.score}</div>\n                <div className=\"vr\"></div>\n                <div className=\"title-text\"><span className=\"user-name\">{userDetails.userName}</span></div>\n            </div>\n        </>\n       \n    );\n}","export default function DialogDox(props) {\n    let dialogInfo = props.data\n    return (\n        <div>\n            <div className=\"dialog-overlay\"></div>\n            <div className=\"dialog-content\">\n                <div className=\"dialog-form\">\n                    <span className=\"dialog-title\">{dialogInfo.title}</span>\n                    <span className=\"dialog-desc\">{dialogInfo.desc}</span>\n                    <button onClick={dialogInfo.handleBtn1}>{dialogInfo.btn1}</button>\n                    <button onClick={dialogInfo.handleBtn2}>{dialogInfo.btn2}</button>\n                </div>\n            </div>\n        </div>\n        \n    );\n}","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getLeaderBoard } from './store/game'\n\nexport default function LeaderBoard() {\n    const dispatch = useDispatch()\n    const gameStatus = useSelector(state => state.game.gameStatus)\n\n    const leaderBoard = useSelector(state => state.game.leaderBoard)\n\n    const [showLeaderBoardBtn, setShowLeaderBoardBtn] = useState(true)\n\n    let handleLeaderBoard = function() {\n        setShowLeaderBoardBtn(false)\n        setInterval(()=>{\n            dispatch(getLeaderBoard())\n            // console.log(leaderBoard)\n        }, 3000);\n    }\n\n    \n\n\n    return (\n        <div className=\"game-leaderboard\">\n            {\n                showLeaderBoardBtn && <button onClick={handleLeaderBoard}>Get Live leaderboard</button>\n            }\n            <div className=\"title-text\">LEADER BOARD</div>\n            <div className=\"hr\"></div>\n            {\n                leaderBoard.length > 0 && <div className=\"leaderboard-header\">\n                    <div>User Name</div>\n                    <div>Score</div>\n                </div>\n            }\n            {\n                leaderBoard.map((item, index)=> {\n                    return <div key={index} className=\"leaderboard-content\">\n                        <div >{item.userName}</div>\n                        <div >{item.score}</div>\n                    </div>\n                })\n            }\n            \n        </div>\n    );\n}","import CardsContainer from \"./CardsContainer\"\nimport GameInfo from \"./GameInfo\";\nimport DialogDox from \"./DialogBox\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setStatus  } from './store/game'\nimport { logoff } from \"./store/auth\"\nimport LeaderBoard from \"./LeaderBoard\";\n\nexport default function Game() {\n    const gameStatus = useSelector(state => state.game.gameStatus)\n    const dispatch = useDispatch()\n    let retry = () => {\n        console.log(\"retry\")\n        dispatch(setStatus(\"inprogress\"))\n    }\n    let goHome = () => {\n        console.log(\"goHome\")\n        dispatch(setStatus(\"inprogress\"))\n        dispatch(logoff(true))\n    }\n    let gameOverDialog = {\n        title:\"GAME OVER\",\n        btn1:\"Try Again\",\n        btn2:\"Home\",\n        handleBtn1: retry,\n        handleBtn2: goHome\n    }\n    let gameWonDialog = {\n        title:\"WON!\",\n        btn1:\"Play Again\",\n        btn2:\"Home\",\n        handleBtn1: retry,\n        handleBtn2: goHome\n    }\n    return (\n        <>\n\n        {gameStatus === \"gameover\" && <DialogDox data={gameOverDialog}/>}\n        {gameStatus === \"won\" && <DialogDox data={gameWonDialog}/>}\n        {gameStatus === \"inprogress\" && <div className=\"game-content\">\n        <div className=\"game-header\"> Exploding Cat Game</div>\n        <div className=\"game-description\">\n            <span className=\"title-text\">GAME RULES:</span>\n            <div className=\"hr\"></div>\n            <ul>\n                <li>Select a card from Deck by clicking on the Deck.</li>\n                <li>If the card drawn from the deck is a cat card, then the card is removed from the deck.</li>\n                <li>If the card is exploding kitten (bomb) then the player loses the game.</li>\n                <li>If the card is defusing card, then the card is removed from the deck. This card can be used to defuse one bomb that may come in subsequent cards drawn from the deck.</li>\n                <li>If the card is a shuffle card, then the game is restarted and the deck is filled with 5 cards again.</li>\n            </ul>\n        </div>\n        <div className=\"game-area\">\n            <div className=\"play-header\"><GameInfo /></div>\n            <div className=\"play-area\">\n                <CardsContainer />\n                <LeaderBoard />\n            </div>\n\n            \n        </div>\n        \n        </div>}\n       \n        </>\n      );\n}","import { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setUserDetailsAsync } from './store/auth'\n\nexport default function Home() {\n\n    const [username, setUserName] = useState(\"\")\n    const dispatch = useDispatch()\n    let handleLogin = ()=> {\n        console.log(\"sdf\", username)\n        if(!username) return\n        dispatch(setUserDetailsAsync(username))\n    }\n    let handleInputChange = (event)=>{\n        setUserName(event.target.value)\n    }\n    let serviceCall = ()=> {\n        console.log(\"env\", process.env.NODE_ENV)\n    }\n    return (\n        <>\n         <div className=\"home-game-header\"> Exploding Cat Game</div>\n         <div className=\"home\">\n            <div className=\"home-overlay\"></div>\n            <div className=\"home-content\">\n                <div className=\"form-group\">\n                    <label>\n                        <span>Username</span>\n                        <input type=\"text\" value={username} onChange={handleInputChange} placeholder=\"Enter User Name\"/>\n                    </label>\n                    <button onClick={handleLogin}>Start Game</button>\n                </div>\n                <div>\n                    <button onClick={serviceCall}>\n                        CALL SERVICE\n                    </button>\n                </div>\n            </div>\n           \n        </div>\n        \n        </>\n      \n        \n    );\n}","import Game from \"./Game\";\nimport Home from \"./Home\";\nimport { useSelector } from 'react-redux'\n\n\n\n\n// params needed\n// if not logged in display login form\n// else display game component\n\nfunction App() {\n  const userLoggedIn = useSelector(state => state.auth.loggedIn)\n\n\n  return (\n    <>\n    {!userLoggedIn && <Home />}\n    {userLoggedIn &&  <Game />}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport gameSlice from './game'\nimport authSlice from \"./auth\"\n\nexport const store = configureStore({\n  reducer: {\n    game: gameSlice,\n    auth: authSlice\n  },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store/configureStore'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}